---
# This role is part of bootstrap process that creates sysadmin accounts so
# further setup can be done with logged `sudo`.  ooni-sysadmin repo is single
# point of truth for the keys, unknown keys are dropped, that's why
# `authorized_key` ansible module is not used.

- name: install sudo
  apt:
    name: sudo
    state: latest
    update_cache: yes
    cache_valid_time: 28800

- name: create groups
  group: name={{ item }} state=present
  with_items: "{{ adm_logins | union(shell_logins) }}"

- name: create users
  user:
    name: "{{ item }}"
    group: "{{ item }}"
    comment: "{{ passwd[item].comment }}"
    shell: /bin/bash
    state: present
  with_items: "{{ adm_logins | union(shell_logins) }}"

- name: create .ssh dir in user homes
  file: path=/home/{{item}}/.ssh state=directory owner={{item}} group={{item}} mode=0700
  with_items: "{{ adm_logins | union(shell_logins) }}"

- name: create .ssh/authorized_keys for each user
  template: src=authorized_keys dest=/home/{{item}}/.ssh/authorized_keys owner={{item}} group={{item}} mode=0400
  with_items: "{{ adm_logins | union(shell_logins) }}"

- name: sudoers.d/adm
  template: src=sudoers dest=/etc/sudoers.d/adm owner=root group=root mode=0440 validate='visudo -cf %s'

- name: require gid=0 for su # to prevent any process doing `su` while knowing The Password
  lineinfile:
    path: /etc/pam.d/su
    line: "auth required pam_wheel.so # ansible-managed in ooni-sysadmin.git"
    insertafter: pam_wheel.so

- name: set root password # to be able to recover via TTY
  user:
    name: root
    comment: "OONI Root {{ root_password_mtime }}"
    password: "{{ root_password_digest }}"

    #- name: disable root login on SSH
    #  lineinfile:
    #    path: /etc/ssh/sshd_config
    #    regexp: '^#*PermitRootLogin '
    #    line: "PermitRootLogin no"
    #  become: yes
    #
    #- name: reload sshd
    #  service:
    #    name: sshd
    #    state: reloaded
    #  become: yes

...
