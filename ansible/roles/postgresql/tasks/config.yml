---
- name: ensure PostgreSQL service is running
  service: >
    name=postgresql
    state=started
    enabled=yes
  become_user: root

- name: register PostgreSQL pg_hba full PATH
  command: "psql -t -P format=unaligned -c 'show {{ item }}';"
  with_items:
  - hba_file
  - config_file
  register: pg_path

- debug: var=pg_path

- name: template pg_bha.conf
  template: >
    src=pg_hba.conf.j2
    dest={{ pg_path.results[0].stdout }}
    owner=postgres
    group=postgres
    mode=0640
  notify: restart postgresql

- name: template postgresql_ooni.conf
  template:
    src: postgresql_ooni.conf
    dest: "{{ (pg_path.results[1].stdout | dirname) + '/postgresql_ooni.conf' }}"
    owner: postgres
    group: postgres
    mode: 0640
  notify: restart postgresql

- name: add postgresql_ooni.conf
  lineinfile:
    path: "{{ pg_path.results[1].stdout }}"
    insertafter: EOF
    line: "include 'postgresql_ooni.conf'"
    state: present
    backup: yes
    owner: postgres
    group: postgres
    mode: 0640
  notify: restart postgresql

- name: create a new database in PostgreSQL
  postgresql_db:
    name: "{{ psql_db_name }}"
    state: present

- name: add user and grant permissions to DB
  postgresql_user:
    db: "{{ psql_db_name }}"
    name: "{{ psql_db_user }}"
    password: "{{ psql_db_passwd }}"
    role_attr_flags: "CREATEDB,NOSUPERUSER"
    encrypted: true
    no_password_changes: yes
