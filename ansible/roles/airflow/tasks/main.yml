---
- name: shared tmp directory to workaround lack of tmpfs support in docker_container
  file: dest=/srv/tmp state=directory owner=root group=root mode=0750

- name: config file directory
  file: dest=/srv/etc state=directory owner=root group=root mode=0750

- name: docker network for airflow
  docker_network:
    name: af
    driver_options:
      com.docker.network.bridge.name: braf
    ipam_options:
      subnet: 172.26.43.0/24
      gateway: 172.26.43.1

- include: af-redis.yml

- include: af-psql.yml

- name: copy nodeexp_airflow check
  copy: src=nodeexp_airflow dest=/etc/cron.hourly/nodeexp_airflow mode=0555 owner=root group=root mode=0555
  notify: restart af-worker # because the _file_ is bind-monted, not a directory

- name: shared airflow config templates
  file: dest=/srv/etc/af-share-{{ airflow_tag }} state=directory owner=root group=root mode=0750
- name: check shared airflow passwd
  stat: path=/srv/etc/af-share-{{ airflow_tag }}/passwd
  register: afpasswd
- name: check shared airflow group
  stat: path=/srv/etc/af-share-{{ airflow_tag }}/group
  register: afgroup
- name: check shared airflow.cfg
  stat: path=/srv/etc/af-share-{{ airflow_tag }}/airflow.cfg
  register: afcfg

- name: create temporary openobservatory/airflow container to extract file
  docker_container:
    image: openobservatory/airflow:{{ airflow_tag }}
    name: af-tmp
    purge_networks: true
    state: present # NB: it's not `started`
  when: not (afpasswd.stat.exists and afgroup.stat.exists and afcfg.stat.exists)
- name: extract shared airflow passwd
  command: docker cp af-tmp:/etc/passwd /srv/etc/af-share-{{ airflow_tag }}/passwd
  when: not afpasswd.stat.exists
- name: extract shared airflow group
  command: docker cp af-tmp:/etc/group /srv/etc/af-share-{{ airflow_tag }}/group
  when: not afgroup.stat.exists
- name: extract shared airflow.cfg
  command: docker cp af-tmp:/usr/local/airflow/airflow.cfg /srv/etc/af-share-{{ airflow_tag }}/airflow.cfg
  when: not afcfg.stat.exists
- name: drop temporary openobservatory/airflow container
  docker_container:
    name: af-tmp
    state: absent

- name: chown & chmod shared airflow.cfg
  file: path=/srv/etc/af-share-{{ airflow_tag }}/airflow.cfg mode=0644 owner=root group=root

- name: update shared airflow group
  lineinfile:
    dest: /srv/etc/af-share-{{ airflow_tag }}/group
    line: "{{ item.login }}:x:{{ item.id }}:"
  with_items:
    - "{{ passwd.afsched }}"
    - "{{ passwd.afwebsrv }}"
    - "{{ passwd.afworker }}"

- name: update shared airflow passwd
  lineinfile:
    dest: /srv/etc/af-share-{{ airflow_tag }}/passwd
    line: "{{ item.login }}:x:{{ item.id }}:{{ item.id }}:{{ item.comment }}:/usr/local/airflow:/bin/bash"
  with_items:
    - "{{ passwd.afsched }}"
    - "{{ passwd.afwebsrv }}"
    - "{{ passwd.afworker }}"

- name: mkdir etc/af-worker
  file: dest=/srv/etc/af-worker state=directory owner=root group=root mode=0700
- template: dest=/srv/etc/af-worker/s3read.env src=af-worker-s3read.env owner=root group=root mode=0400
- template: dest=/srv/etc/af-worker/s3root.env src=af-worker-s3root.env owner=root group=root mode=0400
- template: dest=/srv/etc/af-worker/s3_ceo_backup_creator.env src=af-worker-s3_ceo_backup_creator.env owner=root group=root mode=0400
- template: dest=/srv/etc/af-worker/hkgmetadb.env src=af-worker-hkgmetadb.env owner=root group=root mode=0400

- name: mkdir af-worker-bin
  file: dest=/srv/af-worker-bin state=directory owner=root group=root mode=0755
- name: copy docker-trampoline
  tags: airflow-dags
  copy: src=docker-trampoline dest=/srv/af-worker-bin/ owner=root group=root mode=0755
  notify: restart af-worker # because the _file_ is bind-monted, not a directory

- name: mkdir airflow-dags
  file: dest=/srv/airflow-dags state=directory owner=root group=root mode=0755
- name: copy airflow-dags # depends on `rsync`
  tags: airflow-dags
  synchronize: src=airflow-dags/ dest=/srv/airflow-dags/ archive=no recursive=yes checksum=yes delete=yes
  notify: restart airflow

- include: af-container.yml dockname=af-sched  login=afsched  command=scheduler
- include: af-container.yml dockname=af-websrv login=afwebsrv command=webserver ipv4_address=172.26.43.254
- include: af-container.yml dockname=af-worker login=afworker command=worker image_ext=-worker
  vars:
    volume_ext:
      - /var/run/docker.sock:/var/run/docker.sock
      - /srv/af-worker-bin/docker-trampoline:/usr/local/bin/docker-trampoline:ro
      - /srv/etc/af-worker:/etc/af-worker:ro
